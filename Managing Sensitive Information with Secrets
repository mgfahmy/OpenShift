1-Log in to the OpenShift cluster and create the authorization-secrets project.
=================================================================
$oc login -u developer -p developer
$oc new-projecty authorization-secrets
=================================================================
2-Create a secret with the credentials and connection information to access a MySQL database.
=================================================================
$oc create secret generic mysql --from-literal user=myuser --from-literal password=redhat123 \
--from-literal database=test_secrets --from-literal hostname=mysql
=================================================================
3-Deploy a database and add the secret for user and database configuration.
=================================================================
$oc new-app --name mysql --image registry.redhat.io/rhel8/mysql-80:1
$oc get pods -w
$oc set env deployment/mysql --from secret/mysql --prefix MYSQL_
$oc set volumes deployment/mysql --add -type secret --mount-path /run/secrets/mysql \
--secret-name mysql
$oc get pods
==================================================================
4-Verify that the database now authenticates using the environment variables initialized from the mysql secret.
==================================================================
$oc rsh mysql-7cd7499d66-gm2rh
#mysql -u user --password=redhat123 test_secrets -e 'show databases;'
#df -h | grep mysql
#for file in $(ls /run/secrets/mysql)
do
echo "${file} : $(ls /run/secrets/mysql/${file})"
done
exit
==================================================================
5-Create a new application that uses the MySQL database.
==================================================================
$oc new-app --name quotes --image quay.io/redhattraining/famous-quotes:2.1
$oc get pods -l deployment=quotes -w
==================================================================
6-The quotes application requires several environment variables. 
The mysql secret can initialize environment variables for the quotes application by adding the QUOTES_ prefix.
==================================================================
$oc set env deployment/quotes --from secret/mysql \
--prefix QUOTES_
$oc get pods -l deployment=quotes
==================================================================
7-Verify that the quotes pod successfully connects to the database and that the application displays a list of quotes.
==================================================================
$oc logs quotes-77df54758b-mqdtf
$oc expose service quotes --hostname quotes.apps.ocp4.example.com
$oc get route quotes
$curl -s http://qoutes.apps.ocp4.example.com/env | grep QUOTES
$curl -s http://quotes.apps.ocp4.example.com/status
$curl -s http://quotes.apps.ocp4.example.com/random
==================================================================
8-Remove the authorization-secrets project.
==================================================================
$oc delete project authorization-secrets
